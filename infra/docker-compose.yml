version: '3.3'
services:

  frontend:
    container_name: foodgram-front
    build: ../frontend
    volumes:
      - ../frontend/:/app/result_build/
  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - media_volume:/app/media/
      - static_volume:/app/static/
  backend:
    container_name: foodgram-back
    build:
      context: ../backend
    command: gunicorn foodgram.wsgi:application --bind 0.0.0.0:8000 
    volumes:
      - ../data/:/app/data/
      - media_volume:/app/backend/media/
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ../backend/.env
  db:
    image: postgres:14.0-alpine  
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ../backend/.env

volumes:
  postgres_data:
  media_volume:
  static_volume:
